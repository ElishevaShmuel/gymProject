// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gym.DataNew;

#nullable disable

namespace gym.DataNew.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20241212221125_add-ef")]
    partial class addef
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gym.CoreNew.Entities.cours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Gener")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OperationTimeid")
                        .HasColumnType("int");

                    b.Property<int>("memberId")
                        .HasColumnType("int");

                    b.Property<string>("memberId1")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("teacherId")
                        .HasColumnType("int");

                    b.Property<string>("teacherId1")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("OperationTimeid");

                    b.HasIndex("memberId1");

                    b.HasIndex("teacherId1");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("gym.CoreNew.Entities.member", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Members");
                });

            modelBuilder.Entity("gym.CoreNew.Entities.teacher", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("MyExpiriens")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("teachers");
                });

            modelBuilder.Entity("gym.CoreNew.Entities.time_operation", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<TimeOnly>("TimeEnd")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("TimeStart")
                        .HasColumnType("time");

                    b.HasKey("id");

                    b.ToTable("time_operation");
                });

            modelBuilder.Entity("gym.CoreNew.Entities.cours", b =>
                {
                    b.HasOne("gym.CoreNew.Entities.time_operation", "OperationTime")
                        .WithMany()
                        .HasForeignKey("OperationTimeid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("gym.CoreNew.Entities.member", null)
                        .WithMany("MyCourses")
                        .HasForeignKey("memberId1");

                    b.HasOne("gym.CoreNew.Entities.teacher", null)
                        .WithMany("Courses")
                        .HasForeignKey("teacherId1");

                    b.Navigation("OperationTime");
                });

            modelBuilder.Entity("gym.CoreNew.Entities.member", b =>
                {
                    b.Navigation("MyCourses");
                });

            modelBuilder.Entity("gym.CoreNew.Entities.teacher", b =>
                {
                    b.Navigation("Courses");
                });
#pragma warning restore 612, 618
        }
    }
}
